// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Assert = require("assert");
var Util$AgdaModeVscode = require("../../src/Util/Util.bs.js");
var State$AgdaModeVscode = require("../../src/State.bs.js");
var Test__Util$AgdaModeVscode = require("./Test__Util.bs.js");

function run(normalization) {
  describe("request to Agda", (function () {
          describe("global", (function () {
                  it("should be responded with the correct answer 1", (async function () {
                          var ctx = await Test__Util$AgdaModeVscode.AgdaMode.make(undefined, "Auto.agda");
                          var state = await Test__Util$AgdaModeVscode.AgdaMode.load(ctx);
                          var responses = {
                            contents: []
                          };
                          var responseHandler = async function (response) {
                            responses.contents.push(response);
                          };
                          var goal = state.goals[0];
                          if (goal !== undefined) {
                            await State$AgdaModeVscode.sendRequest(state, responseHandler, {
                                  TAG: "Auto",
                                  _0: normalization,
                                  _1: goal,
                                  [Symbol.for("name")]: "Auto"
                                });
                          } else {
                            Assert.fail("No goals found");
                          }
                          var version = state.agdaVersion;
                          if (version !== undefined) {
                            if (Util$AgdaModeVscode.Version.gte(version, "2.7.0")) {
                              return Curry._3(Assert.deepEqual, responses.contents, [
                                          {
                                            TAG: "GiveAction",
                                            _0: 0,
                                            _1: {
                                              TAG: "GiveString",
                                              _0: "n",
                                              [Symbol.for("name")]: "GiveString"
                                            },
                                            [Symbol.for("name")]: "GiveAction"
                                          },
                                          "CompleteHighlightingAndMakePromptReappear",
                                          {
                                            TAG: "InteractionPoints",
                                            _0: [1],
                                            [Symbol.for("name")]: "InteractionPoints"
                                          }
                                        ], undefined);
                            } else {
                              return Curry._3(Assert.deepEqual, responses.contents, [
                                          {
                                            TAG: "GiveAction",
                                            _0: 0,
                                            _1: {
                                              TAG: "GiveString",
                                              _0: "n",
                                              [Symbol.for("name")]: "GiveString"
                                            },
                                            [Symbol.for("name")]: "GiveAction"
                                          },
                                          {
                                            TAG: "Status",
                                            _0: false,
                                            _1: false,
                                            [Symbol.for("name")]: "Status"
                                          },
                                          {
                                            TAG: "DisplayInfo",
                                            _0: {
                                              TAG: "AllGoalsWarnings",
                                              _0: "*All Goals*",
                                              _1: "?1 : ℕ\n",
                                              [Symbol.for("name")]: "AllGoalsWarnings"
                                            },
                                            [Symbol.for("name")]: "DisplayInfo"
                                          },
                                          "CompleteHighlightingAndMakePromptReappear",
                                          {
                                            TAG: "InteractionPoints",
                                            _0: [1],
                                            [Symbol.for("name")]: "InteractionPoints"
                                          }
                                        ], undefined);
                            }
                          } else {
                            Assert.fail("No Agda version found");
                            return ;
                          }
                        }));
                  it("should be responded with the correct answer 2", (async function () {
                          var ctx = await Test__Util$AgdaModeVscode.AgdaMode.make(undefined, "Auto.agda");
                          var state = await Test__Util$AgdaModeVscode.AgdaMode.load(ctx);
                          var responses = {
                            contents: []
                          };
                          var responseHandler = async function (response) {
                            responses.contents.push(response);
                          };
                          var goal = state.goals[1];
                          if (goal !== undefined) {
                            await State$AgdaModeVscode.sendRequest(state, responseHandler, {
                                  TAG: "Auto",
                                  _0: normalization,
                                  _1: goal,
                                  [Symbol.for("name")]: "Auto"
                                });
                          } else {
                            Assert.fail("No goals found");
                          }
                          var version = state.agdaVersion;
                          if (version !== undefined) {
                            if (Util$AgdaModeVscode.Version.gte(version, "2.7.0")) {
                              return Curry._3(Assert.deepEqual, responses.contents, [
                                          {
                                            TAG: "GiveAction",
                                            _0: 1,
                                            _1: {
                                              TAG: "GiveString",
                                              _0: "n",
                                              [Symbol.for("name")]: "GiveString"
                                            },
                                            [Symbol.for("name")]: "GiveAction"
                                          },
                                          "CompleteHighlightingAndMakePromptReappear",
                                          {
                                            TAG: "InteractionPoints",
                                            _0: [0],
                                            [Symbol.for("name")]: "InteractionPoints"
                                          }
                                        ], undefined);
                            } else {
                              return Curry._3(Assert.deepEqual, responses.contents, [
                                          {
                                            TAG: "GiveAction",
                                            _0: 1,
                                            _1: {
                                              TAG: "GiveString",
                                              _0: "m",
                                              [Symbol.for("name")]: "GiveString"
                                            },
                                            [Symbol.for("name")]: "GiveAction"
                                          },
                                          {
                                            TAG: "Status",
                                            _0: false,
                                            _1: false,
                                            [Symbol.for("name")]: "Status"
                                          },
                                          {
                                            TAG: "DisplayInfo",
                                            _0: {
                                              TAG: "AllGoalsWarnings",
                                              _0: "*All Goals*",
                                              _1: "?0 : ℕ\n",
                                              [Symbol.for("name")]: "AllGoalsWarnings"
                                            },
                                            [Symbol.for("name")]: "DisplayInfo"
                                          },
                                          "CompleteHighlightingAndMakePromptReappear",
                                          {
                                            TAG: "InteractionPoints",
                                            _0: [0],
                                            [Symbol.for("name")]: "InteractionPoints"
                                          }
                                        ], undefined);
                            }
                          } else {
                            Assert.fail("No Agda version found");
                            return ;
                          }
                        }));
                }));
        }));
}

describe("agda-mode.auto[AsIs]", (function () {
        run("AsIs");
      }));

describe("agda-mode.auto[Simplified]", (function () {
        run("Simplified");
      }));

describe("agda-mode.auto[Normalised]", (function () {
        run("Normalised");
      }));

describe("agda-mode.auto[HeadNormal]", (function () {
        run("HeadNormal");
      }));

exports.run = run;
/*  Not a pure module */
