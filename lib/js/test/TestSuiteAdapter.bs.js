// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Glob = require("glob");
var Mocha = require("mocha");
var Nodepath = require("node:path");
var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

var Mocha$1 = {};

var Glob$1 = {};

var TestFailure = /* @__PURE__ */Caml_exceptions.create("TestSuiteAdapter-AgdaModeVscode.TestFailure");

function run() {
  var mocha = new Mocha({
        ui: "bdd",
        color: true
      });
  var testsRoot = Nodepath.resolve(__dirname, "tests");
  return new Promise((function (resolve, reject) {
                Glob("**/*.js", {
                      cwd: testsRoot
                    }, (function (err, files) {
                        if (!(err == null)) {
                          return reject(err);
                        }
                        files.forEach(function (file) {
                              mocha.addFile(Nodepath.resolve(testsRoot, file));
                            });
                        try {
                          mocha.run(function (failures) {
                                if (failures > 0) {
                                  return reject({
                                              RE_EXN_ID: TestFailure,
                                              _1: String(failures) + " tests failed."
                                            });
                                } else {
                                  return resolve(true);
                                }
                              });
                          return ;
                        }
                        catch (raw_exn){
                          var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
                          console.error(exn);
                          return reject(exn);
                        }
                      }));
              }));
}

exports.Mocha = Mocha$1;
exports.Glob = Glob$1;
exports.TestFailure = TestFailure;
exports.run = run;
/* glob Not a pure module */
