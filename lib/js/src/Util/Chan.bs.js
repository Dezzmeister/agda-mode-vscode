// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Eventemitter3 = require("eventemitter3");

function emit0(arg1, obj) {
  return obj.emit(arg1);
}

function emit2(arg1, arg2, arg3, obj) {
  return obj.emit(arg1, arg2, arg3);
}

function eventNames(arg1, obj) {
  return obj.eventNames(arg1);
}

function on(prim0, prim1, prim2) {
  return prim0.addListener(prim1, prim2);
}

function on2(prim0, prim1, prim2) {
  return prim0.addListener(prim1, prim2);
}

function on3(prim0, prim1, prim2) {
  return prim0.addListener(prim1, prim2);
}

function once2(arg1, arg2, obj) {
  return obj.once(arg1, arg2);
}

function removeListener(prim0, prim1, prim2) {
  return prim0.off(prim1, prim2);
}

function removeListener2(prim0, prim1, prim2) {
  return prim0.off(prim1, prim2);
}

function removeListener3(prim0, prim1, prim2) {
  return prim0.off(prim1, prim2);
}

var EventEmitter3 = {
  emit0: emit0,
  emit2: emit2,
  eventNames: eventNames,
  on: on,
  on2: on2,
  on3: on3,
  once2: once2,
  removeListener: removeListener,
  removeListener2: removeListener2,
  removeListener3: removeListener3
};

function make(prim) {
  return new Eventemitter3.EventEmitter();
}

function emit(self, x) {
  self.emit("data", x);
}

function on$1(self, callback) {
  self.addListener("data", callback);
  return function () {
    self.off("data", callback);
  };
}

function once(self) {
  return new Promise((function (resolve, param) {
                self.once("data", resolve);
              }));
}

function pipe(self, other) {
  return on$1(self, (function (val) {
                emit(other, val);
              }));
}

function destroy(self) {
  self.removeAllListeners();
}

var Module = {
  make: make,
  emit: emit,
  on: on$1,
  once: once,
  pipe: pipe,
  destroy: destroy
};

exports.EventEmitter3 = EventEmitter3;
exports.Module = Module;
exports.make = make;
exports.emit = emit;
exports.on = on$1;
exports.once = once;
exports.pipe = pipe;
exports.destroy = destroy;
/* eventemitter3 Not a pure module */
