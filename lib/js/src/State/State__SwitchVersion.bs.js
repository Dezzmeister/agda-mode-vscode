// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var Util$AgdaModeVscode = require("../Util/Util.bs.js");
var Connection__Target$AgdaModeVscode = require("../Connection/Connection__Target.bs.js");

async function openGlobalStorageFolder(state) {
  await Vscode.env.openExternal(state.globalStorageUri);
}

async function handleSelection(state, selection) {
  var match = selection.label;
  if (match === "Open download folder") {
    return await openGlobalStorageFolder(state);
  }
  console.log("Unknown selection");
}

async function run(state) {
  var quickPick = Vscode.window.createQuickPick();
  var subscriptions = [];
  quickPick.placeholder = "Switch Agda Version";
  var otherItems = [
    {
      kind: -1,
      label: ""
    },
    {
      description: "Where the language servers are downloaded",
      label: "Open download folder"
    }
  ];
  Util$AgdaModeVscode.Disposable.add(quickPick.onDidChangeSelection(function (items) {
            items.forEach(function (item) {
                  handleSelection(state, item);
                });
          }), subscriptions);
  Util$AgdaModeVscode.Disposable.add(quickPick.onDidHide(function () {
            quickPick.dispose();
            subscriptions.forEach(function (sub) {
                  sub.dispose();
                });
          }), subscriptions);
  var showItems = function (items) {
    quickPick.items = items;
    quickPick.show();
  };
  showItems([otherItems].flat());
  var installationItemsSeperator = [{
      kind: -1,
      label: "Installations"
    }];
  var installationItems = Connection__Target$AgdaModeVscode.getRawPathsFromConfig().map(function (path) {
        return {
                label: path
              };
      });
  showItems([
          installationItemsSeperator,
          installationItems,
          otherItems
        ].flat());
  var installations = await Promise.all(Connection__Target$AgdaModeVscode.getRawPathsFromConfig().map(Connection__Target$AgdaModeVscode.probePath));
  var installationItems$1 = installations.map(function (result) {
        if (result.TAG === "Ok") {
          var match = result._0;
          if (match.TAG === "Agda") {
            return {
                    detail: match._1,
                    iconPath: {
                      dark: Vscode.Uri.joinPath(Vscode.Uri.file(state.extensionPath), "asset/dark.png"),
                      light: Vscode.Uri.joinPath(Vscode.Uri.file(state.extensionPath), "asset/light.png")
                    },
                    label: "Agda v" + match._0
                  };
          }
          var path = match._2;
          if (path.TAG === "Ok") {
            return {
                    description: "???",
                    label: "Unknown"
                  };
          } else {
            return {
                    description: "Agda v" + match._1,
                    detail: path._0,
                    label: "$(squirrel)  Language Server v" + match._0
                  };
          }
        }
        var path$1 = result._0;
        if (path$1.TAG === "CannotResolvePath") {
          return {
                  description: "unable to resolve the given path",
                  detail: path$1._0,
                  label: "$(error)  Error"
                };
        } else {
          return {
                  description: "???",
                  label: "Unknown"
                };
        }
      });
  return showItems([
                installationItemsSeperator,
                installationItems$1,
                otherItems
              ].flat());
}

exports.openGlobalStorageFolder = openGlobalStorageFolder;
exports.handleSelection = handleSelection;
exports.run = run;
/* vscode Not a pure module */
