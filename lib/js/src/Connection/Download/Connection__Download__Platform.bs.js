// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Getos = require("getos");
var Nodeos = require("node:os");

function determine() {
  return new Promise((function (resolve, param) {
                var match = Nodeos.platform();
                switch (match) {
                  case "darwin" :
                      var match$1 = Nodeos.arch();
                      switch (match$1) {
                        case "arm64" :
                            return resolve("MacOS_Arm");
                        case "x64" :
                            return resolve("MacOS_Intel");
                        default:
                          return resolve(undefined);
                      }
                  case "linux" :
                      Getos(function (error, os) {
                            if (!(error == null)) {
                              return resolve(undefined);
                            }
                            var match = os.dist;
                            if (match === "Ubuntu") {
                              return resolve("Ubuntu");
                            } else {
                              return resolve(undefined);
                            }
                          });
                      return ;
                  case "win32" :
                      return resolve("Windows");
                  default:
                    return resolve(undefined);
                }
              }));
}

function toAssetName(platform) {
  switch (platform) {
    case "Windows" :
        return "windows";
    case "Ubuntu" :
        return "ubuntu";
    case "MacOS_Arm" :
        return "macos-arm64";
    case "MacOS_Intel" :
        return "macos-x64";
    
  }
}

exports.determine = determine;
exports.toAssetName = toAssetName;
/* getos Not a pure module */
