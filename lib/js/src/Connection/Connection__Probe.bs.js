// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Nodeos = require("node:os");
var Nodepath = require("node:path");
var Config$AgdaModeVscode = require("../Config.bs.js");
var Source$LanguageServerMule = require("language-server-mule/lib/js/src/Source.bs.js");
var Source__GitHub$LanguageServerMule = require("language-server-mule/lib/js/src/Source/Source__GitHub.bs.js");

async function afterDownload(isCached, param) {
  var path = param[0];
  var assetPath = Nodepath.join(path, "data");
  var env = Object.fromEntries([[
          "Agda_datadir",
          assetPath
        ]]);
  var options_env = env;
  var options = {
    env: options_env
  };
  var execPath = Nodepath.join(path, "als");
  var shouldChmod = !isCached && Nodeos.platform() !== "win32";
  if (shouldChmod) {
    await Source__GitHub$LanguageServerMule.chmodExecutable(execPath);
  }
  return {
          TAG: "Ok",
          _0: [
            execPath,
            [],
            options,
            param[1]
          ],
          [Symbol.for("name")]: "Ok"
        };
}

async function probeLSP(globalStoragePath, onDownload) {
  var port = Config$AgdaModeVscode.Connection.getAgdaLanguageServerPort();
  return await Source$LanguageServerMule.Module.searchUntilSuccess([
              {
                TAG: "FromTCP",
                _0: port,
                _1: "localhost",
                [Symbol.for("name")]: "FromTCP"
              },
              {
                TAG: "FromCommand",
                _0: "als",
                [Symbol.for("name")]: "FromCommand"
              },
              {
                TAG: "FromGitHub",
                _0: {
                  username: "agda",
                  repository: "agda-language-server",
                  userAgent: "agda/agda-mode-vscode",
                  globalStoragePath: globalStoragePath,
                  chooseFromReleases: "UseLatest",
                  onDownload: onDownload,
                  afterDownload: afterDownload,
                  cacheInvalidateExpirationSecs: 86400,
                  log: (function (x) {
                      console.log(x);
                    })
                },
                [Symbol.for("name")]: "FromGitHub"
              }
            ]);
}

function probeEmacs() {
  var storedPath = Config$AgdaModeVscode.Connection.getAgdaPath();
  var storedName = Config$AgdaModeVscode.Connection.getAgdaVersion();
  return Source$LanguageServerMule.Module.searchUntilSuccess([
              {
                TAG: "FromFile",
                _0: storedPath,
                [Symbol.for("name")]: "FromFile"
              },
              {
                TAG: "FromCommand",
                _0: storedName,
                [Symbol.for("name")]: "FromCommand"
              }
            ]);
}

var Version;

exports.Version = Version;
exports.afterDownload = afterDownload;
exports.probeLSP = probeLSP;
exports.probeEmacs = probeEmacs;
/* node:os Not a pure module */
