// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var OS$AgdaModeVscode = require("../Util/OS.bs.js");
var Connection__Process__Exec$AgdaModeVscode = require("./Process/Connection__Process__Exec.bs.js");

async function searchWithCommand(command, name, timeoutOpt) {
  var timeout = timeoutOpt !== undefined ? timeoutOpt : 1000;
  var stdout = await Connection__Process__Exec$AgdaModeVscode.run(command, [name], timeout);
  if (stdout.TAG === "Ok") {
    return {
            TAG: "Ok",
            _0: stdout._0.trim(),
            [Symbol.for("name")]: "Ok"
          };
  }
  var error = stdout._0;
  if (typeof error !== "object") {
    return {
            TAG: "Error",
            _0: error,
            [Symbol.for("name")]: "Error"
          };
  }
  if (error.TAG !== "FromStderr") {
    return {
            TAG: "Error",
            _0: error,
            [Symbol.for("name")]: "Error"
          };
  }
  var match = error._0;
  if (match !== undefined && !(match !== 1 || error._1 !== "")) {
    return {
            TAG: "Error",
            _0: undefined,
            [Symbol.for("name")]: "Error"
          };
  } else {
    return {
            TAG: "Error",
            _0: error,
            [Symbol.for("name")]: "Error"
          };
  }
}

async function search(name, timeoutOpt) {
  var timeout = timeoutOpt !== undefined ? timeoutOpt : 1000;
  if (OS$AgdaModeVscode.onUnix) {
    return await searchWithCommand("which", name, timeout);
  }
  var stdout = await searchWithCommand("which", name, timeout);
  if (stdout.TAG === "Ok") {
    return {
            TAG: "Ok",
            _0: stdout._0,
            [Symbol.for("name")]: "Ok"
          };
  } else {
    return await searchWithCommand("where.exe", name, timeout);
  }
}

exports.searchWithCommand = searchWithCommand;
exports.search = search;
/* OS-AgdaModeVscode Not a pure module */
