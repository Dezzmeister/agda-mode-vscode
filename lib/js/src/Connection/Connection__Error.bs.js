// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Connection__Process__Exec$AgdaModeVscode = require("./Process/Connection__Process__Exec.bs.js");
var Connection__Download__GitHub$AgdaModeVscode = require("./Download/Connection__Download__GitHub.bs.js");
var Connection__Target__ALS__Error$AgdaModeVscode = require("./Target/ALS/Connection__Target__ALS__Error.bs.js");
var Connection__Target__Agda__Error$AgdaModeVscode = require("./Target/Agda/Connection__Target__Agda__Error.bs.js");

var Aggregated = {};

function toString(x) {
  if (typeof x !== "object") {
    if (x === "CannotFindCompatibleALSRelease") {
      return [
              "Cannot find compatible Agda Language Server release for download",
              "Prebuilts are only available for download on Ubuntu, Windows, and macOS (arm64, x64).\nPlease build from source if you are on a different platform. \nSee https://github.com/agda/agda-language-server for more information."
            ];
    }
    throw {
          RE_EXN_ID: "Match_failure",
          _1: [
            "Connection__Error.res",
            38,
            2
          ],
          Error: new Error()
        };
  } else {
    switch (x.TAG) {
      case "Agda" :
          return Connection__Target__Agda__Error$AgdaModeVscode.toString(x._0);
      case "ALS" :
          return Connection__Target__ALS__Error$AgdaModeVscode.toString(x._0);
      case "CommandsNotFound" :
          return [
                  "Cannot find the `agda` or `als` commands",
                  x._0.map(function (param) {
                          var error = param[1];
                          var command = param[0];
                          if (error !== undefined) {
                            return "Cannot find `" + command + "` because: " + Connection__Process__Exec$AgdaModeVscode.$$Error.toString(error) + ".";
                          } else {
                            return "Cannot find `" + command + "` in PATH";
                          }
                        }).join("\n") + "\n\nIf `agda` or `als` is installed somewhere outside of PATH, please add the path to the configuration at `agdaMode.connection.paths`."
                ];
      case "CannotHandleURLsATM" :
          return [
                  "Cannot handle URLs at the moment",
                  "This will be supported again in the future"
                ];
      case "NotAgdaOrALS" :
          return [
                  "Not Agda or Agda Language Server",
                  "`" + x._0 + "` doesn't seem to be an Agda executable or an Agda Language Server"
                ];
      case "ValidationError" :
          return [
                  "Error",
                  Connection__Process__Exec$AgdaModeVscode.$$Error.toString(x._1)
                ];
      case "CannotFetchALSReleases" :
          return [
                  "Cannot fetch releases of Agda Language Server",
                  Connection__Download__GitHub$AgdaModeVscode.$$Error.toString(x._0)
                ];
      case "CannotDownloadALS" :
          return [
                  "Failed download the Agda Language Server",
                  Connection__Download__GitHub$AgdaModeVscode.$$Error.toString(x._0)
                ];
      
    }
  }
}

exports.Aggregated = Aggregated;
exports.toString = toString;
/* Connection__Process__Exec-AgdaModeVscode Not a pure module */
